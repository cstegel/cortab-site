:root {
  --app-bg-color: hsl(0, 0%, 10%);
  --main-font-height-no-units: 1.7;
  --main-font-height: calc(var(--main-font-height-no-units) * 1em);
  --main-padding-no-units: 0.2;
  --main-padding: calc(var(--main-padding-no-units) * 1em);
  --input-height-no-units: 2.6;
  --input-height: calc(var(--input-height-no-units) * 1em);
}

/* Webkit (chrome and safari) */
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  :root {
    --select-pad: 0px;
  }
}
/* firefox */
@-moz-document url-prefix() {
  :root {
    /* additional left-pad that firefox adds to <select> between padding and text start */
    --select-pad: 4px;
  }
}
.fretboard {
  position: relative;
  padding: var(--main-padding) 0 var(--main-padding) 0;
}

.fretboard-string {
  position: absolute;
  background-color: white;
}

.fret-bar {
  position: absolute;
  background-color: #999999;
}

.guide-dot {
  position: absolute;
  border-radius: 50%;
  background-color: white;
}

.fretboard-back {
  position: absolute;
  background-color: #6e3c02;
}

.fret-position-outline {
  position: absolute;
  border-radius: 50%;
}

.fret-position {
  position: absolute;
  display: flex;
  align-items: stretch;
  border-radius: 50%;
  background-color: aqua;
  text-align: center;
  -webkit-user-select: none;
  /* Chrome all / Safari all */
  -moz-user-select: none;
  /* Firefox all */
  -ms-user-select: none;
  /* IE 10+ */
  user-select: none;
  /* Likely future */
}

:not(.disabled).fret-position-outline:hover {
  background-color: rgba(102, 204, 255, 0.5);
  opacity: 1;
  z-index: 1;
  cursor: pointer;
}

:not(.disabled).fret-position-outline:hover .fret-position.hide {
  display: flex;
  background-color: rgba(0, 255, 255, 0.5);
}

:not(.disabled).fret-position-outline:hover .fret-position {
  z-index: 2;
}

.fret-position-text {
  position: relative;
  top: 7%;
  color: black;
  flex: 1 1;
  text-align: center;
  font-size: 20px;
  font-family: monospace;
  font-weight: 900;
}

.tab {
  display: flex;
  flex-flow: row nowrap;
}

.tab-notes {
  display: flex;
  flex-flow: column nowrap;
  align-items: stretch;
  padding: 0.6em 0 0.6em 0;
}

.note {
  flex: 1 1;
  width: 2em;
  text-align: right;
}

.note-input {
  width: 2.65em;
  /* font: 1.25em sans-serif; */
}

.tuning-notes {
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
}

.tuning-label {
  font: var(--main-font-height) sans-serif;
  height: calc(var(--input-height) / var(--main-font-height-no-units));
  line-height: calc(var(--input-height) / var(--main-font-height-no-units));
  padding: calc(var(--main-padding) / var(--main-font-height-no-units));
}

.icon {
  /* calculate filter from color with https://codepen.io/sosuke/pen/Pjoqqp 
  Include brightness(0) saturate(100%) first if icon isn't 100% black
  */
  filter: brightness(0) saturate(100%) invert(100%) sepia(0%) saturate(0%) hue-rotate(2deg) brightness(107%) contrast(102%);
  height: 1.4em;
  width: 1.4em;
}

.tuning-bar {
  display: flex;
  flex-flow: row nowrap;
}

.modify-tuning {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-around;
}

.add-string-background,
.remove-string-background {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: space-around;
  height: 1.6em;
  width: 1.6em;
}

.add-string-background:hover {
  background-color: #6991a5;
}

.add-string-background:active {
  background-color: #66ccff;
}

.remove-string-background:hover {
  background-color: #814b4b;
}

.remove-string-background:active {
  background-color: #ff6161;
}

.tuning-label-bar {
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
}

* {
  /* Force width & height to include padding & borders */
  box-sizing: border-box;
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--app-bg-color);
}

.app {
  background-color: var(--app-bg-color);
  color: white;
  margin-left: 1em;
  margin-right: 1em;
  margin-top: 1em;
}

.app-layout {
  display: flex;
  flex-flow: row nowrap;
}

.app-before,
.app-after {
  flex: 1 1;
}

.app-conent {
  flex: 1 0;
}

.app-title {
  font: 2.5em sans-serif;
  margin: var(--main-padding);
}

.title {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

.switch-app {
  padding: var(--main-padding);
}

.switch-app > .icon {
  width: 2em;
  height: 2em;
}

.switch-app:hover {
  background-color: #6991a5;
}

.switch-app:active {
  background-color: #66ccff;
}

input,
select {
  line-height: calc(var(--input-height) / var(--main-font-height-no-units));
  height: calc(var(--input-height) / var(--main-font-height-no-units));
  border: 0;
  background: rgba(255, 255, 255, 0.1);
  color: white;
  font: var(--main-font-height) sans-serif;
}

input:focus,
select:focus {
  outline: solid grey thin;
}

.chord-input {
  width: 7em;
  padding-left: var(--main-padding);
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.chord-notes {
  color: white;
  font: 1.25em sans-serif;
  padding: var(--main-padding);
  display: flex;
  align-items: center;
}

.input-wrap {
  border-bottom: 1px solid #9e9e9e;
  border-top: 0;
  border-left: 0;
  border-right: 0;
  padding: 0;
}

.input-wrap:hover {
  border-color: #66ccff;
}

.div-wrap {
  display: flex;
  padding: var(--main-padding);
}

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg fill='white' height='1em' width='1em' viewBox='0 0 1 1' xmlns='http://www.w3.org/2000/svg'><path d='M0 0 1 0 0.5 1'/><path d='1 1 L0.5 1' fill='none'/></svg>");
  background-repeat: no-repeat;
  background-position-x: calc(100% - 0.25em);
  background-position-y: 50%;
  padding: 0 1em 0 calc(var(--main-padding) - var(--select-pad));
}

option {
  background-color: #313131;
}

.chord-selector {
  display: flex;
  flex-flow: column nowrap;
}

.chord-selector-text {
  display: flex;
}

.chord-selector-selects {
  display: flex;
}

.fretboard-list {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}

.input-bar {
  margin-bottom: 1em;
}

@media (max-width: 55em) {
  .tuning {
    display: flex;
    flex-flow: row wrap;
    padding-top: 0.4em;
  }

  .tuning-label::after {
    content: ":";
  }

  .input-bar {
    display: flex;
    flex-flow: row wrap;
  }
}
/* I'm not sure why "all and" is required, but it seems like it is. 
   It's used because we can't do min-width: calc(55em + 1px)
*/
@media not all and (max-width: 55em) {
  /* Only apply when on "cortab" page because we only want to shift it up for the chord selector
  that is on the cortab page. */
  .cortab .tuning {
    position: relative;
    top: calc(-1px - 1 * var(--input-height) - 2 * var(--main-padding));
    /* * (1 + 2 * var(--main-padding))); */
  }

  .input-bar {
    display: flex;
    flex-flow: row nowrap;
  }
}
.error {
  word-wrap: "break-word";
  font: "3em white monospace";
}

.tab-chord-header {
  font: 2em sans-serif;
  margin: 0.2em 0 0.2em 0;
}

.tab-chord {
  font: 2em sans-serif;
  padding-left: 0.75em;
  color: aqua;
}

.tab-chord-long {
  font: 2em sans-serif;
  padding-left: 0.75em;
  color: white;
}

.tab-chord-row {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}

li > .tab-chord-row > .tab-chord,
li > .tab-chord-row > .tab-chord-long {
  font-size: 1.2em;
}

.hide {
  display: none;
}

/*# sourceMappingURL=main.css.map */
